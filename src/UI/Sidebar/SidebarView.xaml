<UserControl x:Class="MarkRead.App.UI.Sidebar.SidebarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="250">
    
    <UserControl.Resources>
        <!-- Merge icon resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MarkRead.App;component/Rendering/assets/icons/FileTreeIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Collapse/Expand Animation -->
            <Storyboard x:Key="CollapseAnimation">
                <DoubleAnimation Storyboard.TargetName="SidebarGrid"
                                 Storyboard.TargetProperty="Width"
                                 To="0"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="SidebarGrid"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0"
                                 Duration="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <Storyboard x:Key="ExpandAnimation">
                <DoubleAnimation Storyboard.TargetName="SidebarGrid"
                                 Storyboard.TargetProperty="Width"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseInOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="SidebarGrid"
                                 Storyboard.TargetProperty="Opacity"
                                 To="1"
                                 Duration="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <!-- TreeViewItem Style with Icons -->
            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="False"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="Margin" Value="0,1"/>
                <Setter Property="Foreground" Value="{DynamicResource ThemeTextPrimaryBrush}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!-- Item Header with Icon -->
                                <Border x:Name="ItemBorder"
                                        Grid.Row="0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Padding="{TemplateBinding Padding}"
                                        CornerRadius="4"
                                        TextElement.Foreground="{TemplateBinding Foreground}">
                                    <StackPanel Orientation="Horizontal">
                                        <!-- Expander Toggle for Folders -->
                                        <ToggleButton x:Name="Expander"
                                                      Width="16"
                                                      Height="16"
                                                      Margin="0,0,2,0"
                                                      ClickMode="Press"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Visibility="Collapsed"
                                                      Background="Transparent"
                                                      BorderThickness="0">
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid Background="Transparent">
                                                        <!-- Chevron Right when collapsed -->
                                                        <Path x:Name="ChevronRight"
                                                              Width="12"
                                                              Height="12"
                                                              Fill="{DynamicResource ThemeTextSecondaryBrush}"
                                                              Data="{StaticResource ChevronRightIcon}"
                                                              Stretch="Uniform"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"/>
                                                        <!-- Chevron Down when expanded -->
                                                        <Path x:Name="ChevronDown"
                                                              Width="12"
                                                              Height="12"
                                                              Fill="{DynamicResource ThemeTextSecondaryBrush}"
                                                              Data="{StaticResource ChevronDownIcon}"
                                                              Stretch="Uniform"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Visibility="Collapsed"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="ChevronRight" Property="Visibility" Value="Collapsed"/>
                                                            <Setter TargetName="ChevronDown" Property="Visibility" Value="Visible"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                        </ToggleButton>

                                        <!-- Icon (Folder or File) -->
                                        <Path x:Name="ItemIcon"
                                              Width="16"
                                              Height="16"
                                              Margin="0,0,6,0"
                                              VerticalAlignment="Center"
                                              Stretch="Uniform"
                                              Fill="{DynamicResource ThemeTextSecondaryBrush}"/>

                                        <!-- Item Text -->
                                        <ContentPresenter x:Name="PART_Header"
                                                          ContentSource="Header"
                                                          VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>

                                <!-- Children Container (20px indentation per level to match mockup) -->
                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Margin="20,0,0,0"
                                                Visibility="Collapsed"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Show expander for folders with children -->
                                <Trigger Property="HasItems" Value="True">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ItemIcon" Property="Data" Value="{StaticResource FolderClosedIcon}"/>
                                    <Setter TargetName="ItemIcon" Property="Fill" Value="{DynamicResource ThemeFolderIconBrush}"/>
                                </Trigger>

                                <!-- Change folder icon when expanded -->
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ItemIcon" Property="Data" Value="{StaticResource FolderOpenIcon}"/>
                                </Trigger>

                                <!-- File icon for leaf items -->
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="ItemIcon" Property="Data" Value="{StaticResource MarkdownFileIcon}"/>
                                    <Setter TargetName="ItemIcon" Property="Fill" Value="{DynamicResource ThemeFileIconBrush}"/>
                                </Trigger>

                                <!-- Hover effect -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource ThemeButtonHoverBrush}"/>
                                </Trigger>

                                <!-- Selection highlight -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource ThemeAccentBrush}"/>
                                    <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid x:Name="SidebarGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Sidebar Header -->
        <Border Grid.Row="0" 
                Background="{DynamicResource ThemeBackgroundSecondaryBrush}"
                BorderBrush="{DynamicResource ThemeBorderBrush}" 
                BorderThickness="0,0,0,1" 
                Padding="12,8">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="RootFolderText" 
                           Grid.Column="0"
                           FontWeight="SemiBold" 
                           FontSize="13"
                           Text="Folder" 
                           TextTrimming="CharacterEllipsis"
                           Foreground="{DynamicResource ThemeTextPrimaryBrush}"
                           VerticalAlignment="Center"/>

            </Grid>
        </Border>

        <!-- File Tree -->
        <TreeView Grid.Row="1" 
                  x:Name="FileTreeView"
                  Background="{DynamicResource ThemeSecondaryBackgroundBrush}"
                  BorderThickness="0"
                  Padding="8,4"
                  MouseDoubleClick="FileTreeView_MouseDoubleClick"
                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
        </TreeView>

        <!-- Empty State -->
        <Grid Grid.Row="1"
              x:Name="EmptyStatePanel"
              Visibility="Collapsed"
              Background="{DynamicResource ThemeBackgroundBrush}">
            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Margin="20">
                <Path Width="48"
                      Height="48"
                      Fill="{DynamicResource ThemeTextSecondaryBrush}"
                      Data="{StaticResource FolderOpenIcon}"
                      Stretch="Uniform"
                      Opacity="0.3"
                      Margin="0,0,0,12"/>
                <TextBlock x:Name="EmptyStateText"
                           Text="No folder opened"
                           HorizontalAlignment="Center"
                           TextAlignment="Center"
                           Foreground="{DynamicResource ThemeTextSecondaryBrush}"
                           FontSize="13"
                           TextWrapping="Wrap"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
