<Window x:Class="MarkRead.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:local="clr-namespace:MarkRead.App"
        xmlns:shell="clr-namespace:MarkRead.App.UI.Shell"
        xmlns:start="clr-namespace:MarkRead.App.UI.Start"
        xmlns:tabs="clr-namespace:MarkRead.App.UI.Tabs"
        xmlns:find="clr-namespace:MarkRead.App.UI.Find"
        xmlns:sidebar="clr-namespace:MarkRead.App.UI.Sidebar"
        mc:Ignorable="d"
        Title="MarkRead" Height="720" Width="1080"
        MinHeight="400" MinWidth="600"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="False"
        ResizeMode="CanResize"
        Style="{DynamicResource DefaultWindow}"
        Loaded="Window_Loaded">
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="48"
                      ResizeBorderThickness="8"
                      CornerRadius="0"
                      GlassFrameThickness="0"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <!-- Enhanced styles for mockup compliance -->
        <Style x:Key="HeaderButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="MinWidth" Value="32"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ThemeButtonHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>

        <Style x:Key="SidebarToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Content" Value="☰"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ThemeButtonHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Window Control Button Styles -->
        <Style x:Key="WindowControlButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ThemeButtonHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="WindowControlCloseButton" TargetType="Button" BasedOn="{StaticResource WindowControlButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main Application Layout -->
    <Border BorderBrush="{DynamicResource ThemeBorderBrush}" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <!-- Unified Title/Navigation Bar -->
                <RowDefinition Height="48"/>
                <!-- Tab Bar -->
                <RowDefinition Height="Auto"/>
                <!-- Main Content Area -->
                <RowDefinition Height="*"/>
                <!-- Find Bar (collapsed by default) -->
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

        <!-- Unified Title/Navigation Bar (48px height to match mockup) -->
        <!-- Navigation Bar with integrated back/forward, file path, search, export, and window controls -->
        <shell:NavigationBar x:Name="NavigationBar" 
                             Grid.Row="0"
                             MenuRequested="NavigationBar_MenuRequested"
                             SearchRequested="NavigationBar_SearchRequested"
                             ExportRequested="NavigationBar_ExportRequested"/>

        <!-- Enhanced Tab Bar -->
        <Border Grid.Row="1"
                x:Name="TabBarContainer"
                Background="{DynamicResource ThemeBackgroundBrush}"
                BorderBrush="{DynamicResource ThemeBorderBrush}"
                BorderThickness="0,0,0,1"
                Visibility="Collapsed">
            
            <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                          VerticalScrollBarVisibility="Hidden"
                          CanContentScroll="True">
                <TabControl x:Name="TabControl"
                            SelectionChanged="TabControl_SelectionChanged"
                            BorderThickness="0"
                            Background="Transparent"
                            Style="{DynamicResource DefaultTabControl}">
                    
                    <TabControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type tabs:TabItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0"
                                           Text="{Binding Title}" 
                                           Margin="0,0,8,0"
                                           VerticalAlignment="Center"
                                           MaxWidth="200"
                                           TextTrimming="CharacterEllipsis"/>
                                
                                <Button Grid.Column="1"
                                        Content="×"
                                        FontSize="14"
                                        FontWeight="Bold"
                                        Width="16"
                                        Height="16"
                                        Padding="0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource ThemeTextSecondaryBrush}"
                                        Cursor="Hand"
                                        ToolTip="Close tab"
                                        Click="CloseTab_Click"
                                        Tag="{Binding Id}">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                    <Setter Property="Background" Value="{DynamicResource ThemeButtonHoverBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <!-- Empty - content is shown in MarkdownView below -->
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </ScrollViewer>
        </Border>

        <!-- Main Content Area with Sidebar -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <!-- Sidebar (280px width to match mockup) -->
                <ColumnDefinition x:Name="SidebarColumn" Width="280" MinWidth="0"/>
                <!-- Main Content -->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Sidebar Panel -->
            <Border Grid.Column="0"
                    x:Name="SidebarPanel"
                    Background="{DynamicResource ThemeSidebarBackgroundBrush}"
                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                    BorderThickness="0,0,1,0">
                
                <!-- Sidebar Content -->
                <Grid>
                    <Grid.RowDefinitions>
                        <!-- Sidebar Header (40px to match mockup) -->
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Sidebar Header (40px height to match mockup) -->
                    <Border Grid.Row="0"
                            Background="{DynamicResource ThemeSidebarBackgroundBrush}"
                            BorderBrush="{DynamicResource ThemeBorderBrush}"
                            BorderThickness="0,0,0,1"
                            Height="40"
                            Padding="16,0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Files"
                                       Foreground="{DynamicResource ThemeTextPrimaryBrush}"
                                       FontSize="14"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <!-- File Tree -->
                    <sidebar:SidebarView Grid.Row="1" x:Name="SidebarContent"/>
                </Grid>
            </Border>

            <!-- Main Content Panel -->
            <Grid Grid.Column="1" Background="{DynamicResource ThemeBackgroundBrush}">
                <!-- WebView2 for markdown content -->
                <wv2:WebView2 x:Name="MarkdownView"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Margin="0"
                              DefaultBackgroundColor="Transparent"
                              Visibility="Collapsed" />

                <!-- Start Screen (shown when no folder loaded) -->
                <start:StartView x:Name="StartScreen"
                                 Visibility="Visible" />

                <!-- Welcome Screen (shown when folder loaded but no file selected) -->
                <Border x:Name="WelcomeOverlay"
                        Background="{DynamicResource ThemeBackgroundBrush}"
                        Visibility="Collapsed">
                    <StackPanel HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{DynamicResource ThemeTextSecondaryBrush}">
                        <TextBlock Text="🔍" 
                                   FontSize="64" 
                                   HorizontalAlignment="Center" 
                                   Opacity="0.2"
                                   Margin="0,0,0,16"/>
                        <TextBlock Text="No file selected" 
                                   FontSize="16"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,8"/>
                        <TextBlock Text="Select a markdown file from the sidebar to begin" 
                                   FontSize="14"
                                   HorizontalAlignment="Center"
                                   Opacity="0.7"/>
                    </StackPanel>
                </Border>

                <!-- Loading Indicator -->
                <Border x:Name="LoadingOverlay"
                        Background="{DynamicResource ThemeBackgroundBrush}"
                        Visibility="Collapsed">
                    <StackPanel HorizontalAlignment="Center" 
                                VerticalAlignment="Center">
                        <ProgressBar IsIndeterminate="True" 
                                     Width="200" 
                                     Height="4" 
                                     Margin="0,0,0,16"/>
                        <TextBlock Text="Loading..." 
                                   Style="{StaticResource HeaderTextBlock}"
                                   HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>

        <!-- Find Bar -->
        <find:FindBar x:Name="FindBar" Grid.Row="3"/>
    </Grid>
</Border>
</Window>
