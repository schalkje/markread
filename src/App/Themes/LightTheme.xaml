<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Light Theme Color Definitions -->
    <SolidColorBrush x:Key="ThemeBackgroundBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ThemeForegroundBrush" Color="#212529"/>
    <SolidColorBrush x:Key="ThemeAccentBrush" Color="#0066CC"/>
    <SolidColorBrush x:Key="ThemeBorderBrush" Color="#DEE2E6"/>
    <SolidColorBrush x:Key="ThemeButtonBackgroundBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="ThemeButtonHoverBrush" Color="#E9ECEF"/>
    <SolidColorBrush x:Key="ThemeSidebarBackgroundBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="ThemeTabActiveBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ThemeTabInactiveBrush" Color="#F8F9FA"/>

    <!-- Light Theme Text Colors -->
    <SolidColorBrush x:Key="ThemeTextPrimaryBrush" Color="#212529"/>
    <SolidColorBrush x:Key="ThemeTextSecondaryBrush" Color="#6C757D"/>
    <SolidColorBrush x:Key="ThemeTextMutedBrush" Color="#9CA3AF"/>
    <SolidColorBrush x:Key="ThemeTextLinkBrush" Color="#0066CC"/>

    <!-- Light Theme Input Controls -->
    <SolidColorBrush x:Key="ThemeInputBackgroundBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ThemeInputBorderBrush" Color="#DEE2E6"/>
    <SolidColorBrush x:Key="ThemeInputFocusBrush" Color="#0066CC"/>

    <!-- Light Theme Status Colors -->
    <SolidColorBrush x:Key="ThemeSuccessBrush" Color="#28A745"/>
    <SolidColorBrush x:Key="ThemeWarningBrush" Color="#FFC107"/>
    <SolidColorBrush x:Key="ThemeErrorBrush" Color="#DC3545"/>
    <SolidColorBrush x:Key="ThemeInfoBrush" Color="#17A2B8"/>

    <!-- Light Theme Control Styles -->
    
    <!-- Window Style -->
    <Style x:Key="LightThemeWindow" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Button Style -->
    <Style x:Key="LightThemeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ThemeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="LightThemeTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ThemeInputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeInputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ThemeInputFocusBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Style -->
    <Style x:Key="LightThemeListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- ListBoxItem Style -->
    <Style x:Key="LightThemeListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeAccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView Style -->
    <Style x:Key="LightThemeTreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource ThemeSidebarBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TreeViewItem Style -->
    <Style x:Key="LightThemeTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="border"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Margin="16,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeAccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabControl Style -->
    <Style x:Key="LightThemeTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <!-- TabItem Style -->
    <Style x:Key="LightThemeTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource ThemeTabInactiveBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4,4,0,0"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeTabActiveBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,0"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu Style -->
    <Style x:Key="LightThemeMenu" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <!-- MenuItem Style -->
    <Style x:Key="LightThemeMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>