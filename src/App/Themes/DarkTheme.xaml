<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- Dark Theme Color Definitions (matching mockup) -->
    <SolidColorBrush x:Key="ThemeBackgroundBrush" Color="#0F0F0F"/>
    <SolidColorBrush x:Key="ThemeSecondaryBackgroundBrush" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="ThemeForegroundBrush" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ThemeAccentBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="ThemeBorderBrush" Color="#262626"/>
    <SolidColorBrush x:Key="ThemeButtonBackgroundBrush" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="ThemeButtonHoverBrush" Color="#2A2A2A"/>
    <SolidColorBrush x:Key="ThemeSidebarBackgroundBrush" Color="#0F0F0F"/>
    <SolidColorBrush x:Key="ThemeTabActiveBrush" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="ThemeTabInactiveBrush" Color="#0F0F0F"/>

    <!-- Dark Theme Text Colors (matching mockup) -->
    <SolidColorBrush x:Key="ThemeTextPrimaryBrush" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ThemeTextSecondaryBrush" Color="#9CA3AF"/>
    <SolidColorBrush x:Key="ThemeTextMutedBrush" Color="#6B7280"/>
    <SolidColorBrush x:Key="ThemeTextLinkBrush" Color="#60A5FA"/>

    <!-- Dark Theme Input Controls -->
    <SolidColorBrush x:Key="ThemeInputBackgroundBrush" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="ThemeInputBorderBrush" Color="#262626"/>
    <SolidColorBrush x:Key="ThemeInputFocusBrush" Color="#3B82F6"/>
    
    <!-- Additional theme brushes for consistency -->
    <SolidColorBrush x:Key="ThemeSecondaryForegroundBrush" Color="#9CA3AF"/>
    <SolidColorBrush x:Key="ThemeSelectionBrush" Color="#1E3A5F"/>
    
    <!-- Aliases for backward compatibility -->
    <SolidColorBrush x:Key="SurfaceBackground" Color="#0F0F0F"/>
    <SolidColorBrush x:Key="SurfaceSecondary" Color="#1A1A1A"/>
    <SolidColorBrush x:Key="BorderColor" Color="#262626"/>
    <SolidColorBrush x:Key="TextPrimary" Color="#F0F0F0"/>

    <!-- Dark Theme Status Colors -->
    <SolidColorBrush x:Key="ThemeSuccessBrush" Color="#22C55E"/>
    <SolidColorBrush x:Key="ThemeWarningBrush" Color="#F59E0B"/>
    <SolidColorBrush x:Key="ThemeErrorBrush" Color="#EF4444"/>
    <SolidColorBrush x:Key="ThemeInfoBrush" Color="#06B6D4"/>
    
    <!-- Dark Theme File Tree Icon Colors -->
    <SolidColorBrush x:Key="ThemeFolderIconBrush" Color="#60A5FA"/>
    <SolidColorBrush x:Key="ThemeFileIconBrush" Color="#9CA3AF"/>

    <!-- Typography System (shared with Light Theme) -->
    
    <!-- Font Families -->
    <FontFamily x:Key="ThemeFontFamily">Segoe UI, system-ui, sans-serif</FontFamily>
    <FontFamily x:Key="ThemeMonoFontFamily">Consolas, 'Courier New', monospace</FontFamily>
    
    <!-- Font Sizes -->
    <sys:Double x:Key="FontSizeXs">11</sys:Double>
    <sys:Double x:Key="FontSizeSm">12</sys:Double>
    <sys:Double x:Key="FontSizeBase">14</sys:Double>
    <sys:Double x:Key="FontSizeLg">16</sys:Double>
    <sys:Double x:Key="FontSizeXl">18</sys:Double>
    <sys:Double x:Key="FontSize2xl">20</sys:Double>
    <sys:Double x:Key="FontSize3xl">24</sys:Double>
    <sys:Double x:Key="FontSize4xl">32</sys:Double>
    
    <!-- Line Heights -->
    <sys:Double x:Key="LineHeightTight">1.25</sys:Double>
    <sys:Double x:Key="LineHeightSnug">1.375</sys:Double>
    <sys:Double x:Key="LineHeightNormal">1.5</sys:Double>
    <sys:Double x:Key="LineHeightRelaxed">1.625</sys:Double>
    <sys:Double x:Key="LineHeightLoose">2.0</sys:Double>
    
    <!-- Typography Styles -->
    
    <!-- Heading Styles -->
    <Style x:Key="Heading1" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize4xl}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="38"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>
    
    <Style x:Key="Heading2" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize3xl}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="32"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>
    
    <Style x:Key="Heading3" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize2xl}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="28"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    
    <Style x:Key="Heading4" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXl}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="24"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    
    <!-- Body Text Styles -->
    <Style x:Key="BodyLarge" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLg}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="24"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>
    
    <Style x:Key="BodyBase" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="21"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>
    
    <Style x:Key="BodySmall" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSm}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextSecondaryBrush}"/>
        <Setter Property="LineHeight" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    
    <!-- Specialized Text Styles -->
    <Style x:Key="Caption" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeXs}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextMutedBrush}"/>
        <Setter Property="LineHeight" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>
    
    <Style x:Key="Label" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSm}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="LineHeight" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>
    
    <Style x:Key="Code" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeMonoFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSm}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="Background" Value="{StaticResource ThemeSecondaryBackgroundBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="LineHeight" Value="18"/>
    </Style>
    
    <!-- Link Style -->
    <Style x:Key="Link" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextLinkBrush}"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Dark Theme Control Styles -->
    
    <!-- Window Style -->
    <Style x:Key="DarkThemeWindow" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Button Style -->
    <Style x:Key="DarkThemeButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="{StaticResource ThemeButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Navigation Bar Button Styles -->
    
    <!-- Navigation Button Style (back/forward/search/export) -->
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="4"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Control Button Style (minimize/maximize) -->
    <Style x:Key="WindowControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close Button Style (red hover) -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#DC2626"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#B91C1C"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Styling -->
    
    <!-- Tab Scroll Button Style (left/right/new) -->
    <Style x:Key="TabScrollButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="4"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Close Button Style (× button on tabs) -->
    <Style x:Key="TabCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTextSecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="3"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#DC2626"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#B91C1C"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="DarkThemeTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource ThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
        <Setter Property="Background" Value="{StaticResource ThemeInputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeInputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ThemeInputFocusBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Style -->
    <Style x:Key="DarkThemeListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- ListBoxItem Style -->
    <Style x:Key="DarkThemeListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeAccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView Style -->
    <Style x:Key="DarkThemeTreeView" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource ThemeSidebarBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TreeViewItem Style -->
    <Style x:Key="DarkThemeTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="border"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Margin="16,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeAccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabControl Style -->
    <Style x:Key="DarkThemeTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <!-- TabItem Style -->
    <Style x:Key="DarkThemeTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource ThemeTabInactiveBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4,4,0,0"
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeTabActiveBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,0"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu Style -->
    <Style x:Key="DarkThemeMenu" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource ThemeBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <!-- MenuItem Style -->
    <Style x:Key="DarkThemeMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundBrush}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ThemeButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>